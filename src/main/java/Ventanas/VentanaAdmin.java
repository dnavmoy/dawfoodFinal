/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Ventanas;

import Entidades.Producto;
import Entidades.Productosticket;
import Entidades.Ticket;
import java.time.LocalDate;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author daniel
 */
public class VentanaAdmin extends javax.swing.JDialog {

    private VentanaInicial padre;
    private List<Producto> listaProductos;
    /**
     * Creates new form VentanaAdmin
     */
    public VentanaAdmin(VentanaInicial ventana, boolean modal) {
        super(ventana, modal);
        padre=ventana;
        listaProductos = DawFoodDanielNavarro.getListaProductos();
        initComponents();
        
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("Editar Productos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Consultar Ticket");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jMenu1.setText("Editar Productos");

        jMenuItem1.setText("Editar");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Borrar");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem4.setText("Crear Producto");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Cargar tickets");

        jMenuItem3.setText("Cargar Tickets");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(254, 254, 254)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jButton1)
                        .addGap(33, 33, 33)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //try {
        if(jButton1.getText().equals("Editar Productos")){
            int fila = jTable1.getSelectedRow();
            int idProducto = (int) jTable1.getValueAt(fila, 0);
            
            Producto aCambiar= new Producto(idProducto, (String)jTable1.getValueAt(fila, 1), (float)jTable1.getValueAt(fila, 2), (float)jTable1.getValueAt(fila, 3),
                    Integer.parseInt((String)jTable1.getValueAt(fila, 4)),
                    (int)jTable1.getValueAt(fila, 5));
            
            //DawFoodDanielNavarro.QueryUpdateProducto(aCambiar);
            DawFoodDanielNavarro.editarProducto(aCambiar);
            listaProductos = DawFoodDanielNavarro.QueryListaProductos();
            cargarDatosJTable();
        }
        if(jButton1.getText().equals("Borrar")){
             int fila = jTable1.getSelectedRow();
            int idProducto = (int) jTable1.getValueAt(fila, 0);
            DawFoodDanielNavarro.borrarProducto(idProducto);
        }
            
            listaProductos = DawFoodDanielNavarro.QueryListaProductos();
            cargarDatosJTable();
            
        //} catch (Exception e) {
         //   JOptionPane.showMessageDialog(null, "error editando");
        //}
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
          int fila = jTable1.getSelectedRow();
            int idTicket = (int) jTable1.getValueAt(fila, 0);
            int total=0;
            List<Productosticket> lista = DawFoodDanielNavarro.pruebaJpa(idTicket);
            String mostrar= "Numero ticket: " + idTicket;
            mostrar= mostrar.concat("\n Fecha: " + DawFoodDanielNavarro.getListaTickets().get(idTicket-1).getFecha());
            mostrar= mostrar.concat("\nnombre de restaurante\n");
            for(Productosticket pt : lista){
                mostrar= mostrar.concat( String.valueOf(pt.getCantidad()) + " x " );
                mostrar= mostrar.concat( pt.getProducto().getDescripcion() );
                mostrar= mostrar.concat( " = " + pt.getCantidad()*pt.getProducto().getPrecio()+ "\n");
                total+=pt.getCantidad()*pt.getProducto().getPrecio();
            }
            mostrar= mostrar.concat("-----------------");
            mostrar= mostrar.concat("total:  "+ total);
            JOptionPane.showMessageDialog(null, mostrar);
         
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        jButton1.setText("Borrar");
        cargarDatosJTable();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        jButton1.setText("Editar Productos");
        cargarDatosJTable();
        
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        cargarDatosJTableTicket();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        VentanaNuevoProducto nuevav = new VentanaNuevoProducto(this, true);
        nuevav.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    protected List<Producto> getListaProductos(){
        return listaProductos;
    }
    private void cargarDatosJTable() {

        // Se crea el modelo de datos que contendr√° el JTable
        // Este modelo se rellena de datos y luego se asfechaNacimientoocia al JTable
        ModeloTablaProductoEditable modelo = new ModeloTablaProductoEditable();
       

       
        // Array de object con el n√∫mero de columnas del jtable
        // Para guardar cada campo de cada Persona de la lista
        Object[] fila = new Object[modelo.getColumnCount()];

        // Iteramos por la lista y asignamos a
        // cada celda del array el valor del atributo de esa persona
        //List<Producto> = ProductoJpaController.g
        for (Producto p : getListaProductos()) {
            try {
                                  
                        fila[0] = p.getIdProducto();
                        fila[1] = p.getDescripcion();
                        fila[2] = p.getPrecio();
                        fila[3] = p.getIva();
                        fila[4] = p.getStock();
                        fila[5] = p.getCodCategoria().getCodCategoria();
                        modelo.addRow(fila);
                   
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "producto no encontrado");
            }

        }
        
        
        
        
        
        // Al finalizar el bucle el modelo tendr√° tantas filas como nuestra lista
        // Decimos al JTable el modelo a usar
        jTable1.setModel(modelo);

        //oculto la primera fila para poder obtener el valor del id de producto sin mostrarlo
        jTable1.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
        jTable1.getTableHeader().getColumnModel().getColumn(0).setPreferredWidth(0);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(0).setMinWidth(0);

    }

    private void cargarDatosJTableTicket() {

        // Se crea el modelo de datos que contendr√° el JTable
        // Este modelo se rellena de datos y luego se asfechaNacimientoocia al JTable
        ModeloTablaTicket modelo = new ModeloTablaTicket();
       

       
        // Array de object con el n√∫mero de columnas del jtable
        // Para guardar cada campo de cada Persona de la lista
        Object[] fila = new Object[modelo.getColumnCount()];

        // Iteramos por la lista y asignamos a
        // cada celda del array el valor del atributo de esa persona
        //List<Producto> = ProductoJpaController.g
        for (Ticket p : DawFoodDanielNavarro.getListaTickets()) {
            try {
                                  
                        fila[0] = p.getIdTicket();
                        fila[1] = p.getNumPedido();
                        fila[2] = p.getCodTransaccion();
                        fila[3] = p.getFecha();
                        fila[4] = p.getTotalPedido();
                        modelo.addRow(fila);
                   
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "ticket no encontrado");
            }

        }
        
        
        
        
        
        // Al finalizar el bucle el modelo tendr√° tantas filas como nuestra lista
        // Decimos al JTable el modelo a usar
        jTable1.setModel(modelo);

        

    }

    
   
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
